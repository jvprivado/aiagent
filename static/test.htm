<!DOCTYPE html>
<html>

<head>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<style>

*{
  padding:0px;
  margin:0px;
}
body{
  background-color:#171717;
  color:#2187e7;
}
#main{
  display:table;
  height:100vh;
  width:100%;
}
#myCircle
{
  display:table-cell;
  vertical-align:middle;
}
#mainCircle{
  position:relative;
  max-width: 300px;
  max-height:300px;
  margin: auto;
}
#mainContent{
  position:absolute;
  top:0px;
  height:100%;
  width:100%;
}
#mainText{
  visibility:hidden;
  text-align:center;
  vertical-align:middle;
  //padding-top: 120px;
  margin-top: 50%;
  transform: translateY(-50%);
  color:#ccc;
  animation:fade 3s infinite linear;
  font-size:50px;
}
.circle {
    background-color: rgba(0,0,0,0);
    //border: 5px solid rgba(0,183,229,0.9);
    opacity: .9;
    //border-right: 5px solid rgba(0,0,0,0);
    //border-left: 5px solid rgba(0,0,0,0);
    border-radius: 300px;
    box-shadow: 0 0 75px #2187e7;
    width: 300px;
    height: 300px;
    margin: 0 auto;
    //-moz-animation: spinPulse 1s infinite ease-in-out;
    -webkit-animation: spinPulse 2s infinite ease-in-out;
}

.circle1 {
    background-color: rgba(0,0,0,0);
    border: 5px solid rgba(0,183,229,0.9);
    opacity: .9;
    border-left: 5px solid rgba(0,0,0,0);
    border-right: 5px solid rgba(0,0,0,0);
    border-radius: 250px;
    box-shadow: 0 0 100px #2187e7;
    width: 250px;
    height: 250px;
    margin: 0 auto;
    position: absolute;
    top: 20px;
    left:20px;
    //right:0px;
    //-moz-animation: spinoffPulse 1s infinite linear;
    -webkit-animation: spinoffPulse 5s infinite linear;
}


.circleA {
    background-color: rgba(0,0,0,0);
    //border: 5px solid rgba(0,183,229,0.9);
    opacity: .9;
    //border-right: 5px solid rgba(0,0,0,0);
    //border-left: 5px solid rgba(0,0,0,0);
    border-radius: 300px;
    box-shadow: 0 0 75px #2187e7;
    width: 300px;
    height: 300px;
    margin: 0 auto;
    //-moz-animation: spinPulse 1s infinite ease-in-out;
   
}

.circle1A {
    background-color: rgba(0,0,0,0);
    border: 5px solid rgba(0,183,229,0.9);
    opacity: .9;
    border-left: 5px solid rgba(0,0,0,0);
    border-right: 5px solid rgba(0,0,0,0);
    border-radius: 250px;
    box-shadow: 0 0 100px #2187e7;
    width: 250px;
    height: 250px;
    margin: 0 auto;
    position: absolute;
    top: 20px;
    left:20px;
    //right:0px;
    //-moz-animation: spinoffPulse 1s infinite linear;
 
}



@-moz-keyframes spinPulse {
    0% {
        -moz-transform: rotate(160deg);
        opacity: 0;
        box-shadow: 0 0 1px #2187e7;
    }

    50% {
        -moz-transform: rotate(145deg);
        opacity: 1;
    }

    100% {
        -moz-transform: rotate(-320deg);
        opacity: 0;
    };
}

@-moz-keyframes spinoffPulse {
    0% {
        -moz-transform: rotate(0deg);
    }

    100% {
        -moz-transform: rotate(360deg);
    };
}

@-webkit-keyframes spinPulse {
    0% {
      transform:scale(1.1);
    }
    70% {
      transform:scale(0.95);
    }

   /*90% {
      transform:scale(1.05);
    };*/
  100%{
    transform:scale(1.1);
  }
}

@-webkit-keyframes spinoffPulse {
    0% {
        -webkit-transform: rotate(0deg);
    }
    10%{
      -webkit-transform: rotate(90deg);
    }
    20%{
      -webkit-transform: rotate(-90deg);
    }
    40%{
      -webkit-transform: rotate(180deg);
    }
    70%{
      -webkit-transform: rotate(-180deg);
    }
    100% {
        -webkit-transform: rotate(360deg);
    };
}
@keyframes fade{
  0%{opacity:1;}
  50%{opacity:0;}
  100%{opacity:1;}
}
.bars{
	position: fixed;
	z-index: 3;
	margin: 0 auto;
	left: 0;
	right: 0;
	top: 50%;
	margin-top: -30px;
	width: 60px;
	height: 60px;
  list-style: none;
}

@-webkit-keyframes 'loadbars' {
	0%{
		height: 10px;
		margin-top: 25px;
	}
	50%{
		height:50px;
		margin-top: 0px;
	}
	100%{
		height: 10px;
		margin-top: 25px;
	}
}

li{
		background-color: #FFFFFF;
		width: 10px;
		height: 10px;
		float: right;
		margin-right: 5px;
    box-shadow: 0px 10px 20px rgba(0,0,0,0.2);
	}
li:first-child{
			-webkit-animation: loadbars 0.6s cubic-bezier(0.645,0.045,0.355,1) infinite 0s;
		}
li:nth-child(2){
			-webkit-animation: loadbars 0.6s ease-in-out infinite -0.2s;
		}
	li:nth-child(3){
			-webkit-animation: loadbars 0.6s ease-in-out infinite -0.4s;
}
</style>
<script>

	let audioIN = { audio: true };
	// audio is true, for recording

	// Access the permission for use
	// the microphone
	navigator.mediaDevices.getUserMedia(audioIN)

	// 'then()' method returns a Promise
	.then(function (mediaStreamObj) {

		// Connect the media stream to the
		// first audio element
		let audio = document.querySelector('audio');
		//returns the recorded audio via 'audio' tag

		// 'srcObject' is a property which 
		// takes the media object
		// This is supported in the newer browsers
		if ("srcObject" in audio) {
		audio.srcObject = mediaStreamObj;
		}
		else { // Old version
		audio.src = window.URL
			.createObjectURL(mediaStreamObj);
		}

		// It will play the audio
		audio.onloadedmetadata = function (ev) {

		// Play the audio in the 2nd audio
		// element what is being recorded
		audio.play();
		};

		// Start record
		let start = document.getElementById('btnStart');

		// Stop record
		let stop = document.getElementById('btnStop');

		// 2nd audio tag for play the audio
		let playAudio = document.getElementById('audioPlay');

		// This is the main thing to recorded 
		// the audio 'MediaRecorder' API
		let mediaRecorder = new MediaRecorder(mediaStreamObj);
		// Pass the audio stream 

		// Start event
		start.addEventListener('click', function (ev) {
		

		mediaRecorder.start();
		// console.log(mediaRecorder.state);
		})

		// Stop event
		stop.addEventListener('click', function (ev) {
		mediaRecorder.stop();
		// console.log(mediaRecorder.state);
		});

		// If audio data available then push 
		// it to the chunk array
		mediaRecorder.ondataavailable = function (ev) {
		dataArray.push(ev.data);
		}

		// Chunk array to store the audio data 
		let dataArray = [];

		// Convert the audio data in to blob 
		// after stopping the recording
		mediaRecorder.onstop = function (ev) {

		// blob of type mp3
		let audioData = new Blob(dataArray, 
					{ 'type': 'audio/mp3;' });
		
		// After fill up the chunk 
		// array make it empty
		dataArray = [];

		// Creating audio url with reference 
		// of created blob named 'audioData'
		//let audioSrc = window.URL
		//	.createObjectURL(audioData);

		// Pass the audio url to the 2nd video tag
		playAudio.onended = function() {
 
	$("#c1").attr('class', 'circleA');
			$("#c2").attr('class', 'circle1A');
			
};
		var lastanswer = "";
		var fd = new FormData();

		fd.append("blob",audioData);
		fd.append('ext', "mp3"); // send ext of uploaded file
	
		fd.append('file',audioData,'file');
		
		$.ajax({
		type: 'POST',
		url: 'http://localhost:5000/success',
		data: fd,
		cache: false,
		contentType: false,
		processData: false
	}).done(function(data) {

	
				if(lastanswer!=data){
				setTimeout(function(){
			$("#c1").attr('class', 'circle');
			$("#c2").attr('class', 'circle1');
			
					playAudio.src = 'http://localhost:5000/static/a.mp3?noCache=' + Math.floor(Math.random() * 1000000);
					playAudio.load();

			setTimeout(function(){
				playAudio.play();},3000);
		

		},3000);
	


		}

		
	})


		}
	})

	// If any error occurs then handles the error 
	.catch(function (err) {
		console.log(err.name, err.message);
	});
</script>
</head>

<body >
<header>
	<h1></h1>
</header>
<!--button for 'start recording'-->
<p>
	<button id="btnStart">START</button>
		&nbsp;&nbsp;&nbsp;&nbsp;
	<button id="btnStop">STOP</button>
	<!--button for 'stop recording'-->
</p>


<div style="display:none;">

<audio controls></audio>


<audio id="audioPlay" controls></audio>
</div>


<div id="main">
	<div id="myCircle">
	  <div id="mainCircle">
			  <div id="c1" class="circleA"></div>
			  <div id="c2" class="circle1A"></div>
		<div id="mainContent">
		  <h2 id="mainText">Hi!</h2>
		  <ul class="bars">
			  <li></li>
			  <li></li>
			  <li></li>
		  </ul>
		</div>
		  </div>
	</div>
  </div>







</body>

<script>
  
</script>

</html>
